{"version":3,"sources":["mintbean.png","App.js","index.js"],"names":["module","exports","App","useState","input","setInput","data","setData","width","setWidth","filter","setFilter","baseCurrency","setBaseCurrency","baseRate","setBaseRate","useEffect","axios","get","then","res","console","log","Object","entries","conversion_rates","map","item","handleInputChange","event","preventDefault","target","value","handleWidthChange","handleFilterChange","handleSubmit","e","currencyComponent","ListGroup","Item","onClick","base","handleBaseCurrencyChange","Row","Col","style","backgroundColor","height","Navbar","sticky","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Form","onSubmit","Group","padding","controlId","Control","onChange","type","placeholder","Link","Container","Label","toLowerCase","includes","renderData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fb762e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mintbean.cf18b629.png\";","import React, { useState, useEffect } from 'react';\nimport logo from './mintbean.png';\nimport './styles/index.css';\nimport axios from 'axios'\n\nimport { Navbar, Nav, NavDropdown, FormControl, ListGroup, Form, Button, Container, Col, Row } from 'react-bootstrap'\n\nfunction App() {\n  const [input, setInput] = useState(1)\n  const [data, setData] = useState(null)\n  const [width, setWidth] = useState(1)\n  const [filter, setFilter] = useState('')\n  const [baseCurrency, setBaseCurrency] = useState('USD')\n  const [baseRate, setBaseRate] = useState(1)\n\n  useEffect(() =>{\n    axios.get('https://v6.exchangerate-api.com/v6/57b7f2436e214a76bc0127f5/latest/USD')\n                          .then(res => {\n                            const data = res.data\n                            console.log(data)\n                            setData(Object.entries(data.conversion_rates).map(item => item))\n                          })\n  }, [])\n\n  const handleInputChange = (event) => {\n    event.preventDefault()\n    setInput(event.target.value)\n  }\n\n  const handleWidthChange = (event) => {\n    if (event.target.value <=1) {\n      setWidth(1)\n    } else {\n      event.preventDefault()\n      setWidth(event.target.value)\n    }\n  }\n\n  const handleFilterChange = (event) => {\n    event.preventDefault()\n    setFilter(event.target.value)\n  }\n\n  const logData = (event) => {\n    event.preventDefault()\n\n    console.log(data)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log(input)\n    axios.get('https://v6.exchangerate-api.com/v6/57b7f2436e214a76bc0127f5/latest/USD')\n                          .then(res => {\n                            const data = res.data\n                            console.log(data)\n                            setData(Object.entries(data.conversion_rates).map(item => item))\n                          })\n\n  }\n\n\n\n  const currency = (index, rate, name) => {\n    return (\n      <Row key={index}>\n        <Col>\n          <div style={{ color: 'red',  width: rate  }}>\n            {name}\n          </div>\n        </Col>\n    </Row>\n    )\n  }\n\n  const checkData = () => {\n    if(data) {\n      Object.entries(data.conversion_rates).filter(item => item[0].includes(filter)).map((item, index) => {\n        currency(index, item.rate, item.name)\n      })\n    }\n  }\n\n  const handleBaseCurrencyChange = (base, baseRate) => {\n    setBaseCurrency(base)\n    setBaseRate(baseRate)\n  }\n\n  const currencyComponent = (item) => {\n    return (\n      <>\n      <ListGroup.Item onClick={() => handleBaseCurrencyChange(item[0], item[1])}>\n        <Row >\n          <Col>\n          {item[0]}\n          </Col>\n          <Col>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <div style={{ backgroundColor: 'red', height: '20px', width: item[1] * input * width }}>\n                {input / baseRate * item[1] }\n            </div>\n          </Col>\n        </Row>\n      </ListGroup.Item>\n      </>\n    )\n  }\n\n  const renderData = (data, baseRate) => {\n    if(data) {\n      if(filter != ''){\n        return data.filter(item => item[0].toLowerCase().includes(filter.toLowerCase())).map(item => {\n          // return (\n          //   <>\n          //     <ListGroup.Item>{item[0]}</ListGroup.Item>\n          //     <div style={{ backgroundColor: 'red', height: '20px', width: item[1] * input * width }}>\n          //         {input / item[1] * baseRate}\n          //         {baseRate}\n          //     </div>\n          //   </>\n          // )\n          currencyComponent(item)\n        })\n      }\n      console.log('there is data')\n      return data.map(item => {\n        return currencyComponent(item)\n      })\n    } else {\n      return <h2>no data</h2>\n    }\n  }\n\n  return (\n    <>\n      <Navbar sticky='top' bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">{input} {baseCurrency} </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavDropdown title=\"Conversion Settings\" id=\"basic-nav-dropdown\">\n            <Form onSubmit={e => handleSubmit(e)}>\n              <Form.Group style={{ padding: '0 20px' }} controlId=\"formBasicEmail\">\n                <Form.Control onChange={event => handleInputChange(event)} type=\"text\" placeholder=\"enter target rate\" />\n              </Form.Group>\n              <Form.Group style={{ padding: '0 20px' }} controlId=\"formBasicPassword\">\n                <Form.Control onChange={event => handleWidthChange(event)} type=\"text\" placeholder=\"comparison unit width\" />\n              </Form.Group>\n              <Form.Group style={{ padding: '0 20px' }} controlId=\"formBasicPassword\">\n                <Form.Control onChange={event => handleFilterChange(event)} type=\"text\" placeholder=\"filter results\" />\n              </Form.Group>\n            </Form>\n            </NavDropdown>\n            <Nav.Link target=\"_blank\" href=\"https://zackmckenna.com\">made by zackmckenna</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <div className=\"App\">\n        <Container>\n          <Row>\n            <Col>\n              <h1>current</h1>\n            </Col>\n          </Row>\n          <Form onSubmit={e => handleSubmit(e)}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Amount</Form.Label>\n              <Form.Control onChange={event => handleInputChange(event)} type=\"text\" placeholder=\"enter target rate\" />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Comparison Scale (in pixels) </Form.Label>\n              <Form.Control onChange={event => handleWidthChange(event)} type=\"text\" placeholder=\"comparison unit width\" />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Filter results</Form.Label>\n              <Form.Control onChange={event => handleFilterChange(event)} type=\"text\" placeholder=\"filter results\" />\n            </Form.Group>\n          </Form>\n            {/* <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button> */}\n            <h3>comparison scale is set at {width} pixels</h3>\n\n            <ListGroup>\n              {renderData(data, baseRate)}\n            </ListGroup>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}